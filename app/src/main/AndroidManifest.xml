<?xml version="1.0" encoding="utf-8"?>

<!--
    AndroidManifest.xml â€“ the mothership of your app's existence.

    This file is kind of like your appâ€™s resumeâ€”it tells Android what your app is allowed to do (like access the camera or the internet),
    what screens (Activities) it has, what should launch first, and how it should handle shared files or deep links.

    ðŸ”’ Permissions:
    - CAMERA: Required for barcode scanning (ZXing).
    - INTERNET: Needed to fetch product info from the Open Food Facts API.

    ðŸ§­ Activities:
    These lines tell Android what "pages" exist in your app. No declaration = no navigation.
    It doesnâ€™t matter if you built the prettiest layout file in the worldâ€”if itâ€™s not in the manifest, Android will straight-up pretend it doesnâ€™t exist.
    That means no way to open the screen via Intent, no crash message, just a silent fail.

    ðŸ§  Think of it like this: each `<activity>` tag is a map pin. If your app is a road trip, this file is the GPS telling Android where all your destinations are.

    ðŸ“Ž FileProvider:
    Lets us share files (like JSON data) with other apps via a safe URI-based system. Uses file_paths.xml to decide whatâ€™s sharable.

    TL;DR: This isnâ€™t optional boilerplate. The Manifest is your appâ€™s spineâ€”no spine, no movement.
-->

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.INTERNET" />

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Sims"
        tools:targetApi="31">

        <!-- MainActivity handles barcode scans, manual entries, and starting everything off -->
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:label="@string/app_name">

            <!-- This makes the app launchable and able to receive .json files -->
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="application/json" />
            </intent-filter>

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- ðŸ”§ SUPPORTING PAGES (Activities) - ALL MUST BE DECLARED OR THEY WON'T WORK -->

        <!-- ResultActivity: Shows product details after a scan or manual barcode entry -->
        <!-- If not declared: App crashes or silently fails when trying to open this screen -->
        <activity android:name=".ResultActivity" />

        <!-- StorageActivity: Lets user create/view/delete storage locations like "Pantry", "Freezer" -->
        <activity android:name=".StorageActivity" />

        <!-- StorageContentsActivity: Shows whatâ€™s inside a selected storage location -->
        <activity android:name=".StorageContentsActivity" />

        <!-- ManualEntryActivity: Adds items with no barcode, like homemade stuff -->
        <activity android:name=".ManualEntryActivity" />

        <!-- ItemDetailActivity: Deep dive into nutritional info, allergens, etc. from the API -->
        <activity android:name=".ItemDetailActivity" />

        <!-- SyncActivity: Handles importing/exporting JSON to share inventory with others -->
        <activity android:name=".SyncActivity" />

        <!-- FileProvider: Grants temporary access to shared files like exported JSON -->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="com.example.sims.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>

    </application>
</manifest>
